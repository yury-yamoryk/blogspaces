{"version":3,"sources":["services/HttpService.ts","services/UserService.ts","components/Blogs.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","create","baseURL","headers","UserService","getAll","http","get","Blogs","useState","users","setUsers","useEffect","getUsers","then","response","data","console","log","catch","e","className","map","user","index","name","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2NAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yBACTC,QAAS,CACP,eAAgB,sBCMLC,EAJK,CAClBC,OALa,WACb,OAAOC,EAAKC,IAAI,Y,OCoCHC,EApCS,WACpB,MAA0BC,mBAAsB,IAAhD,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAW,WACbT,EAAYC,SACPS,MAAK,SAAAC,GACFJ,EAASI,EAASC,MAClBC,QAAQC,IAAIH,EAASC,SAExBG,OAAM,SAAAC,GACHH,QAAQC,IAAIE,OAI1B,OACE,sBAAKC,UAAU,WAAf,UACI,uCAEA,oBAAIA,UAAU,aAAd,SACKX,GAASA,EAAMY,KAAI,SAACC,EAAMC,GAAP,OAChB,oBACIH,UAAU,kBADd,SAIKE,EAAKE,MAFDD,YCbVE,EAVO,WACpB,OACE,qBAAKL,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAM,IAAKC,UAAWrB,SCG5BsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.7f89430d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"./HttpService\";\nimport User from \"../entities/User\";\n\nconst getAll = () => {\n  return http.get(\"/users\");\n};\n\nconst UserService = {\n  getAll: getAll,\n};\n\nexport default UserService","import React, { useState, useEffect } from \"react\";\nimport UserService from \"../services/UserService\";\nimport User from \"../entities/User\";\n\nconst Blogs: React.FC = () => {\n    const [users, setUsers] = useState<Array<User>>([]);\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    const getUsers = () => {\n        UserService.getAll()\n            .then(response => {\n                setUsers(response.data);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n  return (\n    <div className=\"col-md-6\">\n        <h1>Blogs</h1>\n\n        <ul className=\"list-group\">\n            {users && users.map((user, index) => (\n                <li\n                    className=\"list-group-item\"\n                    key={index}\n                >\n                    {user.name}\n                </li>\n            ))}\n        </ul>\n    </div>\n  );\n}\n\nexport default Blogs;","import React from 'react';\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Blogs from \"./components/Blogs\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"container mt-3\">\n      <Switch>\n        <Route exact path={\"/\"} component={Blogs} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}