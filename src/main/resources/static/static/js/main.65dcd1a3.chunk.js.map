{"version":3,"sources":["services/HttpService.ts","helpers/WebTokenHelper.ts","services/BlogService.ts","actions/types.ts","actions/message.ts","components/Blogs.tsx","actions/blog.ts","services/UserService.ts","actions/user.ts","actions/authentication.ts","components/SignIn.tsx","components/SignUp.tsx","components/Blog.tsx","services/PostService.ts","services/CommentService.ts","components/Post.tsx","actions/post.ts","actions/comment.ts","services/ThemeService.ts","components/CreateBlog.tsx","actions/theme.ts","components/CreatePost.tsx","App.tsx","reportWebVitals.ts","reducers/authentication.ts","reducers/message.ts","reducers/blogs.ts","reducers/blog.ts","reducers/post.ts","reducers/theme.ts","reducers/combinedReducers.ts","data/store.ts","index.tsx"],"names":["axios","create","baseURL","headers","WebTokenHelper","buildHttpHeader","storedUser","localStorage","getItem","user","JSON","parse","token","Authorization","spacesPrefix","BlogService","getAll","filterUserName","a","http","get","response","users","data","filterUser","filter","name","otherUsers","userBlogs","flatMap","blogs","map","blog","link","id","otherBlogs","getBlog","blogPath","optionalBlog","title","posts","theme","post","createBlog","userName","newBlog","themeId","put","blogId","blogTitle","deleteBlog","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","GET_ALL_BLOGS","GET_BLOG","GET_POST","GET_THEMES","ADD_COMMENT","setMessage","message","type","payload","clearMessage","Blogs","props","useSelector","state","authentication","dispatch","useDispatch","useEffect","username","allBlogs","console","log","className","onClick","history","push","window","location","reload","length","index","to","UserService","register","password","login","then","setItem","stringify","logout","removeItem","registerUser","indexOf","toString","Promise","reject","resolve","loginUser","responseData","logoutUser","required","value","role","SignIn","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","isLoggedIn","onSubmit","e","preventDefault","current","validateAll","context","_errors","catch","ref","htmlFor","onChange","target","validations","disabled","style","display","verifyUsername","verifyPassword","SignUp","successful","setSuccessful","Blog","userData","useLocation","goBack","pathname","backgroundColor","blogBackgroundColor","color","blogColor","match","params","ownerUserName","PostService","getPost","postPath","httpResponse","createPost","newPost","postId","postTitle","postDescription","description","deletePost","CommentService","createComment","newComment","commentText","text","commentUserName","notEmpty","Post","blogTheme","newCommentText","setNewCommentText","getPostResponse","postBackgroundColor","postColor","comment","commentBackgroundColor","commentColor","placeholder","comments","ThemeService","getThemesResponse","verifyBlogUrlId","CreateBlog","themes","setBlogId","setBlogTitle","blogThemeId","setBlogThemeId","createBlogResponse","verifyPostUrlId","CreatePost","setPostId","setPostTitle","setPostDescription","createPostResponse","createBrowserHistory","App","currentUser","listen","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","userString","initialState","action","optionalTheme","optionalPost","combineReducers","middleware","thunk","store","createStore","combinedReducers","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65dcd1a3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","\nconst WebTokenHelper = {\n    buildHttpHeader() {\n        const storedUser = localStorage.getItem('user');\n        if (!storedUser) return {};\n        const user = JSON.parse(storedUser);\n      \n        if (user && user.token) {\n          return { Authorization: 'Bearer ' + user.token };\n        } else {\n          return {};\n        }\n    }\n}\n\nexport default WebTokenHelper\n","import http from \"./HttpService\";\nimport Blog from \"../entities/Blog\";\nimport User from \"../entities/User\";\nimport WebTokenHelper from \"../helpers/WebTokenHelper\";\n\nconst spacesPrefix = \"spaces/\";\n\nconst getAll: (filterUserName: string) => Promise<{ userBlogs: Blog[], otherBlogs: Blog[]}>\n= async (filterUserName?: string) => {\n    const response: any = await http.get(\"/spaces/users\");\n    const users: User[] = response.data;\n    const filterUser = users.filter((user) => user.name == filterUserName);\n    const otherUsers = users.filter((user) => user.name != filterUserName);\n    return {\n        userBlogs: filterUser.flatMap(user => {\n            return user.blogs ? user.blogs.map((blog) => ({...blog, link: spacesPrefix + user.name + \"/\" + blog.id})) : [];\n        }),\n        otherBlogs: otherUsers.flatMap(user => {\n            return user.blogs ? user.blogs.map((blog) => ({...blog, link: spacesPrefix + user.name + \"/\" + blog.id})) : [];\n        }),\n    };\n};\n\nconst getBlog: (blogPath: string) => Promise<Blog>\n= async (blogPath: string) => {\n    const response: any = await http.get(blogPath);\n    const blog: Blog = response.data.optionalBlog;\n    if (!blog) {\n        return { id: \"\", title: \"\", posts: [], theme: null};\n    }\n    if (blog.posts) {\n        blog.posts = blog.posts.map(post => ({...post, link: blogPath + \"/\" + post.id }));\n    }\n    return blog;\n};\n\nconst createBlog = async (userName: string, newBlog: Blog, themeId: string) => {\n    const response: any = await http.put(\"/spaces/blog\", {\n        userName,\n        blogId: newBlog.id,\n        blogTitle: newBlog.title,\n        themeId: themeId\n    }, { headers:  WebTokenHelper.buildHttpHeader()});\n\n    return response.data;\n};\n\nconst deleteBlog = async (userName: string, blogId: string) => {\n    const response: any = await http.post(\"/spaces/blog\", {\n        userName,\n        blogId\n    }, { headers:  WebTokenHelper.buildHttpHeader()});\n\n    return response.data;\n};\n\nconst BlogService = {\n  getAll,\n  getBlog,\n  createBlog,\n  deleteBlog,\n};\n\nexport default BlogService","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\nexport const GET_ALL_BLOGS = \"GET_ALL_BLOGS\";\nexport const GET_BLOG = \"GET_BLOG\";\nexport const GET_POST = \"GET_POST\";\nexport const GET_THEMES = \"GET_THEMES\";\nexport const CREATE_BLOG = \"CREATE_BLOG\";\nexport const CREATE_POST = \"CREATE_POST\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message: string) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});","import React, { useState, useEffect } from \"react\";\nimport { default as BlogsEntity } from '../entities/Blogs';\nimport { default as UserEntity } from '../entities/User';\nimport {\n    getAllBlogs,\n} from '../actions/blog'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport WebTokenData from \"../entities/WebTokenData\";\n\nconst Blogs: React.FC = (props: any) => { \n    const blogs = useSelector<any, BlogsEntity>(state => state.blogs);\n    const user = useSelector<any, WebTokenData>(state => state.authentication.user);\n    const dispatch = useDispatch<(action:any)=>any>();\n    \n    useEffect(() => {\n        dispatch(getAllBlogs(user && user.username));\n    }, []);\n\n    const newBlog = () => {\n        props.history.push(\"/spaces/createblog\");\n        window.location.reload();\n    };\n\n    return (\n        <div className=\"list row\">\n            <div className=\"col-md-12\">\n                <h1>Blogs</h1>\n\n                {user &&\n                <button className=\"btn btn-success\" onClick={newBlog}>\n                    Create new blog\n                </button>}\n\n                {user && blogs.userBlogs.length > 0 && <h2>My Blogs</h2>}\n                {blogs.userBlogs && blogs.userBlogs.length > 0 && (\n                    <ul className=\"list-group\">\n                        {blogs.userBlogs.map((blog, index) => (\n                            <li className=\"list-group-item\" key={index}>\n                                <Link to={blog.link!} className=\"nav-link\">\n                                    {blog.title}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n\n                {user && blogs.userBlogs.length > 0 && <h2>Other Blogs</h2>}\n                {blogs.otherBlogs && blogs.otherBlogs.length > 0 && (\n                    <ul className=\"list-group\">\n                        {blogs.otherBlogs.map((blog, index) => (\n                            <li className=\"list-group-item\" key={index}>\n                                <Link to={blog.link!} className=\"nav-link\">\n                                    {blog.title}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n\n                {(!blogs.userBlogs || blogs.userBlogs.length == 0) && (!blogs.otherBlogs || blogs.otherBlogs.length == 0) && (\n                    <span>The space is ready for blogs. Please, create your blog.</span>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Blogs","import Blog from \"../entities/Blog\";\nimport BlogService from \"../services/BlogService\";\nimport { setMessage } from \"./message\";\nimport { CREATE_BLOG, GET_ALL_BLOGS, GET_BLOG } from \"./types\";\n\nexport const getAllBlogs = (filterUserName: string) => async (dispatch) => {\n    try {\n        const allBlogs = await BlogService.getAll(filterUserName);\n\n        dispatch({\n            type: GET_ALL_BLOGS,\n            allBlogs\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getBlog = (blogPath: string) => async (dispatch) => {\n    try {\n        const blog = await BlogService.getBlog(blogPath);\n\n        dispatch({\n            type: GET_BLOG,\n            blog\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const createBlog = (userName: string, blog: Blog, themeId: string) => async (dispatch) => {\n    const response = await BlogService.createBlog(userName, blog, themeId);\n    if (response.message) {\n        dispatch(setMessage(response.message));\n    } else {\n        const newBlog = response.newBlog;\n        dispatch({\n            type: CREATE_BLOG,\n            newBlog\n        });\n    }\n    return response;\n};\n\nexport const deleteBlog = (userName: string, blogId: string) => async (dispatch) => {\n    const response = await BlogService.deleteBlog(userName, blogId);\n    if (response.message) {\n        dispatch(setMessage(response.message));\n    }\n\n    return response;\n};","import http from \"./HttpService\";\nimport WebTokenHelper from \"../helpers/WebTokenHelper\";\n\nconst getAll = () => {\n  return http.get(\"/spaces/users\", { headers:  WebTokenHelper.buildHttpHeader()});\n};\n\nconst register = (username: string, password: string) => {\n  return http.post(\"/spaces/register\", {\n    username,\n    password,\n  });\n};\n\nconst login = (username: string, password: string) => {\n  return http\n    .post(\"/spaces/authenticate\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst UserService = {\n  getAll,\n  register,\n  login,\n  logout,\n};\n\nexport default UserService","import {\n  registerSuccess,\n  registerFail,\n  loginSuccess,\n  loginFail,\n  logout,\n} from './authentication';\nimport { setMessage } from './message';\nimport UserService from \"../services/UserService\";\n\nexport const registerUser = (username: string, password: string) => (dispatch: (action: any) => void) => {\n  return UserService.register(username, password).then(\n    (response) => {\n      if (response.data.message && response.data.message.indexOf(\"Error\") > -1) {\n        const message =\n        (response && response.data && response.data.message) ||\n        response.data.message ||\n        response.toString();\n\n        dispatch(registerFail());\n\n        dispatch(setMessage(message));\n\n        return Promise.reject();\n      } else {\n        dispatch(registerSuccess());\n\n        dispatch(setMessage(response.data.message));\n\n        return Promise.resolve();\n      }\n    }\n  );\n};\n\nexport const loginUser = (username: string, password: string) => (dispatch: (action: any) => void) => {\n  return UserService.login(username, password).then(\n    (responseData) => {\n      if (responseData.token) {\n        dispatch(loginSuccess(responseData));\n\n        return Promise.resolve();\n      } else {\n        const message =\n        (responseData.response && responseData.response.data && responseData.response.data.message) ||\n        responseData.message ||\n        responseData.toString();\n\n        dispatch(loginFail());\n\n        dispatch(setMessage(message));\n        return Promise.reject();\n      }\n    }\n  );\n};\n  \nexport const logoutUser = () => (dispatch: (action: any) => void) => {\n  UserService.logout();\n\n  dispatch(logout());\n};\n  ","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from \"./types\";\n\nexport const registerSuccess = () => ({\n    type: REGISTER_SUCCESS,\n});\n\nexport const registerFail = () => ({\n    type: REGISTER_FAIL,\n});\n\nexport const loginSuccess = (userData) => ({\n    type: LOGIN_SUCCESS,\n    payload: { user: userData }\n});\n\nexport const loginFail = () => ({\n    type: LOGIN_FAIL,\n});\n\nexport const logout = () => ({\n    type: LOGOUT,\n});\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from 'react-validation/build/form';\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { loginUser } from \"../actions/user\";\n\nconst required = (value:string) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        (required)\n      </div>\n    );\n  }\n};\n\nconst SignIn = (props: any) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const isLoggedIn = useSelector<any, boolean>(state => state.authentication.isLoggedIn);\n  const message = useSelector<any, any>(state => state.message.message);\n\n  const dispatch = useDispatch<(action:any)=>any>();\n\n  const onChangeUsername = (e: { target: { value: string; }; }) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e: { target: { value: string; }; }) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const signIn = (e: { preventDefault: () => void; }) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    (form.current as any).validateAll();\n\n    if ((checkBtn as any).current.context._errors.length === 0) {\n      dispatch(loginUser(username, password))\n        .then(() => {\n          props.history.push(\"/\");\n          window.location.reload();\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/spaces\" />;\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <Form onSubmit={signIn} ref={form}>\n            <div className=\"form-group\">\n                <label htmlFor=\"username\">USER NAME</label>\n                <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={username}\n                    onChange={onChangeUsername}\n                    validations={[required]}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"password\">PASSWORD</label>\n                <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onChangePassword}\n                    validations={[required]}\n                />\n            </div>\n\n            <div className=\"text-center\">\n              <button className=\"btn btn-light btn-block\" disabled={loading}>\n                {loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>SIGN IN</span>\n              </button>\n            </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { registerUser } from \"../actions/user\";\n\nconst required = (value:string) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        (required)\n      </div>\n    );\n  }\n};\n\nconst verifyUsername = (value:string) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        (must be between 3 and 20 characters)\n      </div>\n    );\n  }\n};\n\nconst verifyPassword = (value:string) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        (must be between 6 and 40 characters)\n      </div>\n    );\n  }\n};\n\nconst SignUp = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n\n  const message = useSelector<any, string>(state => state.message.message);\n  const dispatch = useDispatch<(action:any)=>any>();\n\n  const onChangeUsername = (e: { target: { value: string; }; }) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e: { target: { value: string; }; }) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const signUp = (e: { preventDefault: () => void; }) => {\n    e.preventDefault();\n\n    setSuccessful(false);\n\n    (form as any).current.validateAll();\n\n    if ((checkBtn as any).current.context._errors.length === 0) {\n      dispatch(registerUser(username, password))\n        .then(() => {\n          setSuccessful(true);\n        })\n        .catch(() => {\n          setSuccessful(false);\n        });\n    }\n  };\n\n  if (successful) {\n    return <Redirect to=\"/spaces/login\" />;\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <Form onSubmit={signUp} ref={form}>\n          {!successful && (\n            <div>\n                <div>\n                    <label htmlFor=\"username\">USER NAME</label>\n                    <Input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"username\"\n                        value={username}\n                        onChange={onChangeUsername}\n                        validations={[required, verifyUsername]}\n                    />\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">PASSWORD</label>\n                    <Input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        value={password}\n                        onChange={onChangePassword}\n                        validations={[required, verifyPassword]}\n                    />\n                </div>\n\n                <div className=\"text-center\">\n                    <button className=\"btn btn-light btn-block\">SIGN UP</button>\n                </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;","import React, { useState, useEffect } from \"react\";\nimport BlogService from \"../services/BlogService\";\nimport { default as BlogEntity } from '../entities/Blog';\nimport {\n    getBlog, deleteBlog\n} from '../actions/blog';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport WebTokenData from \"../entities/WebTokenData\";\n\nconst Blog: React.FC = (props: any) => { \n    const userData = useSelector<any, WebTokenData>(state => state.authentication.user);\n    const location = useLocation();\n    const blog = useSelector<any, BlogEntity>(state => state.blog);\n    const dispatch = useDispatch<(action:any)=>any>();\n\n    if (!blog.id) {\n        props.history.goBack();\n    }\n    \n    useEffect(() => {\n        dispatch(getBlog(location.pathname));\n    }, []);\n\n    const newPost = () => {\n        props.history.push(\"/spaces/createpost/\" + blog.id);\n        window.location.reload();\n    };\n\n    const trashBlog = () => {\n        const ownerUserName = props.match.params.userName;\n        const blogId = props.match.params.blogId;\n        dispatch(deleteBlog(ownerUserName, blogId))\n            .then(response => {\n                props.history.goBack();\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div className=\"list row\" style={\n            blog.theme\n            ? { \n                backgroundColor: blog.theme?.blogBackgroundColor,\n                color: blog.theme.blogColor,\n            }\n            : {}}>\n            <div className=\"col-md-12\">\n                <h1>{blog.title}</h1>\n\n                {userData && userData.username == props.match.params.userName &&\n                <button className=\"btn btn-success\" onClick={newPost}>\n                    Add Post\n                </button>}\n\n                {blog.posts && (\n                    <ul className=\"list-group\">\n                        {blog.posts.map((post, index) => (\n                            <li className=\"list-group-item\" key={index}>\n                                <Link to={post.link!} className=\"nav-link\">\n                                    {post.title}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n\n                {userData && userData.username == props.match.params.userName &&\n                <button className=\"btn btn-danger\" onClick={trashBlog}>\n                    Delete Blog\n                </button>}\n\n                {(!blog.posts || blog.posts.length == 0) && (\n                    <span>Nothing here right now.</span>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Blog","import http from \"./HttpService\";\nimport Post from \"../entities/Post\";\nimport Theme from \"../entities/Theme\";\nimport WebTokenHelper from \"../helpers/WebTokenHelper\";\n\nconst getPost: (postPath: string) => Promise<{ optionalPost: Post, optionalTheme: Theme }>\n= async (postPath: string) => {\n    const httpResponse: any = await http.get(postPath);\n    return httpResponse.data;\n};\n\nconst createPost = async (userName: string, blogId: string, newPost: Post) => {\n  const response: any = await http.put(\"/spaces/post\", {\n      userName,\n      blogId,\n      postId: newPost.id,\n      postTitle: newPost.title,\n      postDescription: newPost.description,\n  }, { headers:  WebTokenHelper.buildHttpHeader()});\n\n  return response.data;\n};\n\nconst deletePost = async (userName: string, blogId: string, postId: string) => {\n  const response: any = await http.post(\"/spaces/post\", {\n      userName,\n      blogId,\n      postId,\n  }, { headers:  WebTokenHelper.buildHttpHeader()});\n\n  return response.data;\n};\n\nconst PostService = {\n  getPost,\n  createPost,\n  deletePost,\n};\n\nexport default PostService","import http from \"./HttpService\";\nimport Comment from \"../entities/Comment\";\nimport WebTokenHelper from \"../helpers/WebTokenHelper\";\n\nconst createComment = async (userName: string, blogId: string, postId: string, newComment: Comment) => {\n  const response: any = await http.post(\"/spaces/createComment\", {\n      userName,\n      blogId,\n      postId,\n      commentText: newComment.text,\n      commentUserName: newComment.userName,\n  }, { headers:  WebTokenHelper.buildHttpHeader()});\n\n  return response.data;\n};\n\nconst CommentService = {\n  createComment,\n};\n\nexport default CommentService","import React, { useState, useEffect, ChangeEvent, useRef } from \"react\";\nimport { default as PostEntity } from '../entities/Post';\nimport { default as ThemeEntity } from '../entities/Theme';\nimport {\n    getPost, deletePost\n} from '../actions/post';\nimport {\n    createComment\n} from '../actions/comment'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { clearMessage } from \"../actions/message\";\nimport Form from \"react-validation/build/form\";\nimport TextArea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport WebTokenData from \"../entities/WebTokenData\";\nimport Comment from \"../entities/Comment\";\n\nconst notEmpty = (value:string) => {\n    if (!value) {\n        return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n            (cannot be empty)\n        </div>\n        );\n    }\n};\n\nconst Post: React.FC = (props: any) => { \n    const userData = useSelector<any, WebTokenData>(state => state.authentication.user);\n    const form = useRef();\n    const checkBtn = useRef();\n    \n    const location = useLocation();\n    const post = useSelector<any, PostEntity>(state => state.post);\n    const blogTheme = useSelector<any, ThemeEntity>(state => state.blog.theme);\n    const dispatch = useDispatch<(action:any)=>any>();\n    const [newCommentText, setNewCommentText] = useState<string>(\"\");\n    const message = useSelector<any, string>(state => state.message.message);\n\n    if (!post) {\n        props.history.goBack();\n    }\n\n    const onChangeCommentText = (e: ChangeEvent<HTMLInputElement>) => {\n        const commentText = e.target.value;\n        setNewCommentText(commentText);\n    };\n    \n    useEffect(() => {\n        dispatch(getPost(location.pathname));\n    }, []);\n\n    const leaveComment = (e) => {\n        e.preventDefault();\n\n        dispatch(clearMessage());\n\n        (form as any).current.validateAll();\n\n        if ((checkBtn as any).current.context._errors.length === 0) {\n            const comment: Comment = {\n                id: -1,\n                text: newCommentText,\n                userName: userData.username,\n            }\n            const ownerUserName = props.match.params.userName;\n            const blogId = props.match.params.blogId;\n            const postId = props.match.params.postId;\n            dispatch(createComment(ownerUserName, blogId, postId, comment));\n        }\n    };\n\n    const trashPost = () => {\n        const ownerUserName = props.match.params.userName;\n        const blogId = props.match.params.blogId;\n        const postId = props.match.params.postId;\n        dispatch(deletePost(ownerUserName, blogId, postId))\n            .then(response => {\n                props.history.goBack();\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div className=\"list row\" style={\n            blogTheme\n            ? { \n                backgroundColor: blogTheme.postBackgroundColor,\n                color: blogTheme.postColor,\n            }\n            : {}}>\n            <div className=\"col-md-12\">\n                <h1>{post.title}</h1>\n\n                <div>\n                    {post.description}\n                </div>\n\n                {userData && <Form onSubmit={leaveComment} ref={form}>\n                    <div className=\"col-md-8\">\n                        <div className=\"input-group mb-3\">\n                            <TextArea style={\n                                blogTheme\n                                ? { \n                                    backgroundColor: blogTheme.commentBackgroundColor,\n                                    color: blogTheme.commentColor,\n                                }\n                                : {}}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Leave a comment...\"\n                                value={newCommentText}\n                                onChange={onChangeCommentText}\n                                validations={[notEmpty]}\n                            />\n                            <div className=\"input-group-append\">\n                                <button\n                                    className=\"btn btn-outline-secondary\"\n                                >\n                                    Comment\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                        {message}\n                        </div>\n                    </div>\n                    )}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>}\n\n                {post.comments && (\n                    <ul className=\"list-group\">\n                        {post.comments.map((comment, index) => (\n                            <li className=\"list-group-item\" key={index}>\n                                <div style={\n                                    blogTheme\n                                    ? { \n                                        backgroundColor: blogTheme.commentBackgroundColor,\n                                        color: blogTheme.commentColor,\n                                    }\n                                    : {}}>\n                                    <span className=\"commentUserName\">{comment.userName}: </span>\n                                    {comment.text}\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n\n                {userData && userData.username == props.match.params.userName &&\n                <button className=\"btn btn-danger\" onClick={trashPost}>\n                    Delete Post\n                </button>}\n            </div>\n        </div>\n    );\n};\n\nexport default Post","import Post from \"../entities/Post\";\nimport PostService from \"../services/PostService\";\nimport { setMessage } from \"./message\";\nimport { CREATE_POST, GET_POST } from \"./types\";\n\nexport const getPost = (postPath: string) => async (dispatch) => {\n    try {\n        const getPostResponse = await PostService.getPost(postPath);\n\n        dispatch({\n            type: GET_POST,\n            getPostResponse\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const createPost = (userName: string, blogId: string, post: Post) => async (dispatch) => {\n    const response = await PostService.createPost(userName, blogId, post);\n    if (response.message) {\n        dispatch(setMessage(response.message));\n    } else {\n        const newPost = response.newPost;\n        dispatch({\n            type: CREATE_POST,\n            newPost,\n        });\n    }\n    return response;\n};\n\nexport const deletePost = (userName: string, blogId: string, postId: string) => async (dispatch) => {\n    const response = await PostService.deletePost(userName, blogId, postId);\n    if (response.message) {\n        dispatch(setMessage(response.message));\n    }\n    \n    return response;\n};","import Comment from \"../entities/Comment\";\nimport CommentService from \"../services/CommentService\";\nimport { setMessage } from \"./message\";\nimport { ADD_COMMENT } from \"./types\";\n\nexport const createComment = (userName: string, blogId: string, postId: string, comment: Comment) => async (dispatch) => {\n    const response = await CommentService.createComment(userName, blogId, postId, comment);\n    if (response.message) {\n        dispatch(setMessage(response.message));\n    } else {\n        const newComment = response.newComment;\n        dispatch({\n            type: ADD_COMMENT,\n            newComment,\n        });\n    }\n    return response;\n};","import Theme from \"../entities/Theme\";\nimport http from \"./HttpService\";\n\nconst getAll: () => Promise<{ themes: Theme[] }>\n= async () => {\n    const httpResponse: any = await http.get(\"/spaces/themes\");\n    const getThemesResponse: {themes: Theme[]} = httpResponse.data;\n    return getThemesResponse;\n};\n\nconst ThemeService = {\n    getAll,\n};\n  \nexport default ThemeService","import React, { useState, useEffect, ChangeEvent, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Blog from \"../entities/Blog\";\nimport { Redirect } from 'react-router-dom';\nimport { createBlog } from '../actions/blog'\nimport { clearMessage } from '../actions/message';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Select from \"react-validation/build/select\";\nimport { getThemes } from \"../actions/theme\";\nimport Theme from \"../entities/Theme\";\nimport WebTokenData from \"../entities/WebTokenData\";\n\nconst required = (value:string) => {\n    if (!value) {\n        return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n            (required)\n        </div>\n        );\n    }\n};\n  \nconst verifyBlogUrlId = (value:string) => {\n    if (!value.match(/^[a-zA-Z0-9-]+$/g))\n    return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n        (must be at least 1 character from alpha-numeric and hyphens)\n    </div>\n    );\n};\n\nconst CreateBlog: React.FC = (props:any) => {\n    const userData = useSelector<any, WebTokenData>(state => state.authentication.user);\n    if (!userData) {\n        props.history.goBack();\n    }\n\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const themes = useSelector<any, Theme[]>(state => state.theme);\n    const [blogId, setBlogId] = useState(\"\");\n    const [blogTitle, setBlogTitle] = useState(\"\");\n    const [blogThemeId, setBlogThemeId] = useState(\"\");\n    const [successful, setSuccessful] = useState(false);\n\n    useEffect(() => {\n        dispatch(getThemes()).then((getThemesResponse) => {\n            if (getThemesResponse) {\n                setBlogThemeId(getThemesResponse.themes[0].id);\n            }\n        });\n    }, []);\n    \n    const message = useSelector<any, string>(state => state.message.message);\n    const dispatch = useDispatch<(action:any)=>any>();\n\n    const onChangeBlogId = (e: { target: { value: string; }; }) => {\n        const blogId = e.target.value;\n        setBlogId(blogId);\n    };\n\n    const onChangeBlogTitle = (e: { target: { value: string; }; }) => {\n        const blogTitle = e.target.value;\n        setBlogTitle(blogTitle);\n    };\n\n    const onChangeBlogThemeId = (e: { target: { value: string; }; }) => {\n        const blogThemeId = e.target.value;\n        setBlogThemeId(blogThemeId);\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n\n        dispatch(clearMessage());\n        setSuccessful(false);\n\n        (form as any).current.validateAll();\n\n        if ((checkBtn as any).current.context._errors.length === 0) {\n            const blog: Blog = {\n                id: blogId,\n                title: blogTitle,\n                theme: null,\n                posts: null,\n            }\n            dispatch(createBlog(userData.username, blog, blogThemeId))\n                .then((createBlogResponse) => {\n                    if (!createBlogResponse.message) {\n                        setSuccessful(true);\n                    } else {\n                        setSuccessful(false);\n                    }\n                });\n        } else {\n            setSuccessful(false);\n        }\n    };\n\n    if (successful) {\n        return <Redirect to=\"/spaces\" />;\n    }\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n            <Form onSubmit={submit} ref={form}>\n                {!successful && (\n                <div>\n                    <div>\n                        <label htmlFor=\"blogId\">BLOG URL ID</label>\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"blogId\"\n                            value={blogId}\n                            onChange={onChangeBlogId}\n                            validations={[required, verifyBlogUrlId]}\n                        />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"blogTitle\">BLOG TITLE</label>\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"blogTitle\"\n                            value={blogTitle}\n                            onChange={onChangeBlogTitle}\n                            validations={[required]}\n                        />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"blogTitle\">BLOG THEME</label>\n                        <Select\n                            className=\"form-control\"\n                            name=\"blogThemeId\"\n                            value={blogThemeId}\n                            onChange={onChangeBlogThemeId}\n                            validations={[required]}\n                        >\n                            {themes && themes.map((theme, index) => (\n                            <option value={theme.id} key={index}>{theme.name}</option>\n                            ))}\n                        </Select>\n                    </div>\n\n                    <div className=\"text-center\">\n                        <button className=\"btn btn-light btn-block\">CREATE BLOG</button>\n                    </div>\n                </div>\n                )}\n\n                {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                    {message}\n                    </div>\n                </div>\n                )}\n                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n            </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default CreateBlog;","import ThemeService from \"../services/ThemeService\";\nimport { GET_THEMES } from \"./types\";\n\nexport const getThemes = () => async (dispatch) => {\n    try {\n        const getThemesResponse = await ThemeService.getAll();\n\n        dispatch({\n            type: GET_THEMES,\n            getThemesResponse\n        });\n\n        return getThemesResponse;\n    } catch (error) {\n        console.log(error);\n    }\n};","import React, { useState, useEffect, ChangeEvent, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost } from '../actions/post'\nimport { clearMessage } from '../actions/message';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport TextArea from \"react-validation/build/textarea\";\nimport CheckButton from \"react-validation/build/button\";\nimport WebTokenData from \"../entities/WebTokenData\";\nimport Post from \"../entities/Post\";\n\nconst required = (value:string) => {\n    if (!value) {\n        return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n            (required)\n        </div>\n        );\n    }\n};\n  \nconst verifyPostUrlId = (value:string) => {\n    if (!value.match(/^[a-zA-Z0-9-]+$/g))\n    return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n        (must be at least 1 character from alpha-numeric and hyphens)\n    </div>\n    );\n};\n\nconst CreatePost: React.FC = (props: any) => {\n    const userData = useSelector<any, WebTokenData>(state => state.authentication.user);\n    if (!userData) {\n        props.history.goBack();\n    }\n\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const [postId, setPostId] = useState(\"\");\n    const [postTitle, setPostTitle] = useState(\"\");\n    const [postDescription, setPostDescription] = useState(\"\");\n    const [successful, setSuccessful] = useState(false);\n    \n    const message = useSelector<any, string>(state => state.message.message);\n    const dispatch = useDispatch<(action:any)=>any>();\n\n    const onChangePostId = (e: { target: { value: string; }; }) => {\n        const postId = e.target.value;\n        setPostId(postId);\n    };\n\n    const onChangePostTitle = (e: { target: { value: string; }; }) => {\n        const postTitle = e.target.value;\n        setPostTitle(postTitle);\n    };\n\n    const onChangePostDescription = (e: { target: { value: string; }; }) => {\n        const postDescription = e.target.value;\n        setPostDescription(postDescription);\n    };\n\n    const submit = (e) => {\n        e.preventDefault();\n\n        dispatch(clearMessage());\n        setSuccessful(false);\n\n        (form as any).current.validateAll();\n\n        if ((checkBtn as any).current.context._errors.length === 0) {\n            const post: Post = {\n                id: postId,\n                title: postTitle,\n                description: postDescription,\n                comments: null,\n            }\n            const blogId = props.match.params.blogId;\n            dispatch(createPost(userData.username, blogId, post))\n                .then((createPostResponse) => {\n                    if (!createPostResponse.message) {\n                        setSuccessful(true);\n                    } else {\n                        setSuccessful(false);\n                    }\n                });\n        } else {\n            setSuccessful(false);\n        }\n    };\n\n    if (successful) {\n        props.history.goBack();\n    }\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n            <Form onSubmit={submit} ref={form}>\n                {!successful && (\n                <div>\n                    <div>\n                        <label htmlFor=\"blogId\">POST URL ID</label>\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"postId\"\n                            value={postId}\n                            onChange={onChangePostId}\n                            validations={[required, verifyPostUrlId]}\n                        />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"blogTitle\">POST TITLE</label>\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"postTitle\"\n                            value={postTitle}\n                            onChange={onChangePostTitle}\n                            validations={[required]}\n                        />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"blogTitle\">POST DESCRIPTION</label>\n                        <TextArea\n                            className=\"form-control\"\n                            name=\"postDescription\"\n                            value={postDescription}\n                            onChange={onChangePostDescription}\n                            validations={[required]}\n                        />\n                    </div>\n\n                    <div className=\"text-center\">\n                        <button className=\"btn btn-light btn-block\">CREATE POST</button>\n                    </div>\n                </div>\n                )}\n\n                {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                    {message}\n                    </div>\n                </div>\n                )}\n                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n            </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default CreatePost;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Blogs from \"./components/Blogs\";\nimport SignIn from \"./components/SignIn\";\nimport SignUp from \"./components/SignUp\";\nimport { logoutUser } from \"./actions/user\";\nimport { clearMessage } from \"./actions/message\";\nimport { createBrowserHistory } from \"history\";\nimport Blog from \"./components/Blog\";\nimport Post from \"./components/Post\";\nimport CreateBlog from \"./components/CreateBlog\";\nimport CreatePost from \"./components/CreatePost\";\n\nconst history = createBrowserHistory();\n\nconst App: React.FC = () => {\n  const currentUser = useSelector<any, any>(state => state.authentication.user);\n  const dispatch = useDispatch<(action:any)=>any>();\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()); // clear message when changing location\n    });\n  }, [dispatch]);\n\n  const logOut = () => {\n    dispatch(logoutUser());\n  };\n\n  return (\n      <Router history={history}>\n        <div>\n        <nav className=\"navbar navbar-expand\">\n            <Link to={\"/spaces\"} className=\"navbar-brand ms-1\">\n              Blog Spaces\n            </Link>\n\n            {currentUser ? (\n              <div className=\"navbar-nav ms-auto\">\n                <li className=\"nav-item\">\n                  <a href=\"/spaces/login\" className=\"nav-link\" onClick={logOut}>\n                    LogOut\n                  </a>\n                </li>\n              </div>\n            ) : (\n              <div className=\"navbar-nav ms-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/spaces/login\"} className=\"nav-link\">\n                    Login\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/spaces/register\"} className=\"nav-link\">\n                    Sign Up\n                  </Link>\n                </li>\n              </div>\n            )}\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Redirect to=\"/spaces\" />\n              </Route>\n              <Route exact path={[\"/spaces/\"]} component={Blogs} />\n              <Route exact path=\"/spaces/login\" component={SignIn} />\n              <Route exact path=\"/spaces/register\" component={SignUp} />\n              <Route exact path=\"/spaces/createBlog\" component={CreateBlog} />\n              <Route exact path=\"/spaces/createPost/:blogId\" component={CreatePost} />\n              <Route exact path=\"/spaces/:userName/:blogId\" component={Blog} />\n              <Route exact path=\"/spaces/:userName/:blogId/:postId\" component={Post} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from \"../actions/types\";\n  \nconst userString = localStorage.getItem(\"user\");\nconst user = userString ? JSON.parse(userString) : null;\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nconst authentication = function (state = initialState, action: { type:string, payload?:any }) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authentication\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = { message: \"\" };\n\nconst message = function (state = initialState, action: { type:string, payload:Object }) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n};\n\nexport default message\n","import {\n    GET_ALL_BLOGS,\n  } from \"../actions/types\";\nimport Blogs from \"../entities/Blogs\";\n  \n  const initialState: Blogs = { userBlogs: [], otherBlogs: []};\n  \n  const blogs = function(state = initialState, action: any) {\n    const { type, allBlogs } = action;\n  \n    switch (type) {\n      case GET_ALL_BLOGS:\n        return allBlogs;\n        \n      default:\n        return state;\n    }\n  };\n  \n  export default blogs","import {\n    GET_BLOG, GET_POST,\n  } from \"../actions/types\";\nimport Blog from \"../entities/Blog\";\n  \n  const initialState: Blog = { id: \"\", title: \"\", theme: null, posts: [] };\n  \n  const blog = function(state = initialState, action: any) {\n    const { type } = action;\n  \n    switch (type) {\n      case GET_BLOG:\n        return action.blog;\n\n      case GET_POST:\n        return {\n          ...state,\n          theme: action.getPostResponse.optionalTheme\n        };\n        \n      default:\n        return state;\n    }\n  };\n  \n  export default blog","import {\n  ADD_COMMENT,\n    GET_POST,\n  } from \"../actions/types\";\nimport Post from \"../entities/Post\";\n  \n  const initialState: Post = { id: \"\", title: \"\", description: \"\", comments: [] };\n  \n  const post = function(state = initialState, action: any) {\n    const { type } = action;\n  \n    switch (type) {\n      case GET_POST:\n        return action.getPostResponse.optionalPost;\n\n      case ADD_COMMENT:\n        return {\n          ...state,\n          comments: [ ...(state.comments ? state.comments : []), action.newComment ],\n        }\n        \n      default:\n        return state;\n    }\n  };\n  \n  export default post","import {\n    GET_THEMES,\n  } from \"../actions/types\";\nimport Theme from \"../entities/Theme\";\n  \n  const initialState: Theme[] = [];\n  \n  const theme = function(state = initialState, action: any) {\n    const { type } = action;\n  \n    switch (type) {\n      case GET_THEMES:\n        return action.getThemesResponse.themes;\n        \n      default:\n        return state;\n    }\n  };\n  \n  export default theme","import { combineReducers } from \"redux\";\nimport authentication from \"./authentication\";\nimport message from \"./message\";\nimport blogs from \"./blogs\";\nimport blog from \"./blog\";\nimport post from \"./post\";\nimport theme from \"./theme\";\n\nexport default combineReducers({\n  authentication,\n  message,\n  blogs,\n  blog,\n  post,\n  theme,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport combinedReducers from \"../reducers/combinedReducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    combinedReducers,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './data/store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}