{"version":3,"sources":["services/HttpService.ts","services/BlogService.ts","actions/types.ts","components/Blogs.tsx","actions/blog.ts","actions/message.ts","helpers/WebTokenHelper.ts","services/UserService.ts","actions/user.ts","actions/authentication.ts","components/SignIn.tsx","components/SignUp.tsx","components/Blog.tsx","services/PostService.ts","components/Post.tsx","actions/post.ts","App.tsx","reportWebVitals.ts","reducers/authentication.ts","reducers/message.ts","reducers/blogs.ts","reducers/blog.ts","reducers/post.ts","reducers/combinedReducers.ts","data/store.ts","index.tsx"],"names":["axios","create","baseURL","headers","spacesPrefix","BlogService","getAll","filterUserName","a","http","get","response","users","data","filterUser","filter","user","name","otherUsers","userBlogs","flatMap","blogs","map","blog","link","id","otherBlogs","getBlog","blogPath","optionalBlog","posts","post","title","theme","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","GET_ALL_BLOGS","GET_BLOG","GET_POST","Blogs","useSelector","state","authentication","dispatch","useDispatch","useEffect","allBlogs","type","console","log","className","index","to","length","setMessage","message","payload","WebTokenHelper","buildHttpHeader","storedUser","localStorage","getItem","JSON","parse","token","Authorization","UserService","register","username","password","login","then","setItem","stringify","logout","removeItem","registerUser","Promise","resolve","error","toString","reject","loginUser","responseData","logoutUser","required","value","role","SignIn","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","isLoggedIn","onSubmit","e","preventDefault","current","validateAll","context","_errors","history","push","window","location","reload","catch","ref","htmlFor","onChange","target","validations","disabled","style","display","verifyUsername","verifyPassword","SignUp","successful","setSuccessful","Blog","useLocation","pathname","backgroundColor","blogBackgroundColor","color","blogColor","PostService","getPost","postPath","httpResponse","Post","blogTheme","getPostResponse","postBackgroundColor","postColor","description","comments","comment","userName","text","createBrowserHistory","App","currentUser","listen","href","onClick","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","userString","initialState","action","optionalTheme","optionalPost","combineReducers","middleware","thunk","store","createStore","combinedReducers","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69ce9129.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"./HttpService\";\nimport Blog from \"../entities/Blog\";\nimport User from \"../entities/User\";\n\nconst spacesPrefix = \"spaces/\";\n\nconst getAll: (filterUserName: string) => Promise<{ userBlogs: Blog[], otherBlogs: Blog[]}>\n= async (filterUserName?: string) => {\n    const response: any = await http.get(\"/spaces/users\");\n    const users: User[] = response.data;\n    const filterUser = users.filter((user) => user.name == filterUserName);\n    const otherUsers = users.filter((user) => user.name != filterUserName);\n    return {\n        userBlogs: filterUser.flatMap(user => {\n            return user.blogs ? user.blogs.map((blog) => ({...blog, link: spacesPrefix + user.name + \"/\" + blog.id})) : [];\n        }),\n        otherBlogs: otherUsers.flatMap(user => {\n            return user.blogs ? user.blogs.map((blog) => ({...blog, link: spacesPrefix + user.name + \"/\" + blog.id})) : [];\n        }),\n    };\n};\n\nconst getBlog: (blogPath: string) => Promise<Blog>\n= async (blogPath: string) => {\n    const response: any = await http.get(blogPath);\n    const blog: Blog = response.data.optionalBlog;\n    if (blog && blog.posts) {\n        blog.posts = blog.posts.map(post => ({...post, link: blogPath + \"/\" + post.id }));\n        return blog;\n    }\n    return { id: \"\", title: \"\", posts: [], theme: null};\n};\n\nconst BlogService = {\n  getAll,\n  getBlog,\n};\n\nexport default BlogService","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\nexport const GET_ALL_BLOGS = \"GET_ALL_BLOGS\";\nexport const GET_BLOG = \"GET_BLOG\";\nexport const GET_POST = \"GET_POST\";","import React, { useState, useEffect } from \"react\";\nimport { default as BlogsEntity } from '../entities/Blogs';\nimport { default as UserEntity } from '../entities/User';\nimport {\n    getAllBlogs,\n} from '../actions/blog'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst Blogs: React.FC = () => { \n    const blogs = useSelector<any, BlogsEntity>(state => state.blogs);\n    const user = useSelector<any, UserEntity>(state => state.authentication.user);\n    const dispatch = useDispatch<(action:any)=>any>();\n    \n    useEffect(() => {\n        dispatch(getAllBlogs(user && user.name));\n    }, []);\n\n    return (\n        <div className=\"list row\">\n            <div className=\"col-md-12\">\n                <h1>Blogs</h1>\n\n                {blogs.userBlogs && (\n                    <ul className=\"list-group\">\n                        {blogs.userBlogs.map((blog, index) => (\n                            <li className=\"list-group-item\" key={index}>\n                                <Link to={blog.link!} className=\"nav-link\">\n                                    {blog.title}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n\n                {blogs.otherBlogs && (\n                    <ul className=\"list-group\">\n                        {blogs.otherBlogs.map((blog, index) => (\n                            <li className=\"list-group-item\" key={index}>\n                                <Link to={blog.link!} className=\"nav-link\">\n                                    {blog.title}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n\n                {(!blogs.userBlogs || blogs.userBlogs.length == 0) && (!blogs.otherBlogs || blogs.otherBlogs.length == 0) && (\n                    <span>The space is ready for blogs. Please, create your blog.</span>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Blogs","import BlogService from \"../services/BlogService\";\nimport { GET_ALL_BLOGS, GET_BLOG } from \"./types\";\n\nexport const getAllBlogs = (filterUserName: string) => async (dispatch) => {\n    try {\n        const allBlogs = await BlogService.getAll(filterUserName);\n\n        dispatch({\n            type: GET_ALL_BLOGS,\n            allBlogs\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getBlog = (blogPath: string) => async (dispatch) => {\n    try {\n        const blog = await BlogService.getBlog(blogPath);\n\n        dispatch({\n            type: GET_BLOG,\n            blog\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message: string) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});","\nconst WebTokenHelper = {\n    buildHttpHeader() {\n        const storedUser = localStorage.getItem('user');\n        if (!storedUser) return {};\n        const user = JSON.parse(storedUser);\n      \n        if (user && user.token) {\n          return { Authorization: 'Bearer ' + user.token };\n        } else {\n          return {};\n        }\n    }\n}\n\nexport default WebTokenHelper\n","import http from \"./HttpService\";\nimport WebTokenHelper from \"../helpers/WebTokenHelper\";\n\nconst getAll = () => {\n  return http.get(\"/spaces/users\", { headers:  WebTokenHelper.buildHttpHeader()});\n};\n\nconst register = (username: string, password: string) => {\n  return http.post(\"/spaces/register\", {\n    username,\n    password,\n  });\n};\n\nconst login = (username: string, password: string) => {\n  return http\n    .post(\"/spaces/authenticate\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst UserService = {\n  getAll,\n  register,\n  login,\n  logout,\n};\n\nexport default UserService","import {\n  registerSuccess,\n  registerFail,\n  loginSuccess,\n  loginFail,\n  logout,\n} from './authentication';\nimport { setMessage } from './message';\nimport UserService from \"../services/UserService\";\n\nexport const registerUser = (username: string, password: string) => (dispatch: (action: any) => void) => {\n  return UserService.register(username, password).then(\n    (response) => {\n      dispatch(registerSuccess());\n\n      dispatch(setMessage(response.data.message));\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response && error.response.data && error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch(registerFail());\n\n      dispatch(setMessage(message));\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const loginUser = (username: string, password: string) => (dispatch: (action: any) => void) => {\n  return UserService.login(username, password).then(\n    (responseData) => {\n      dispatch(loginSuccess(responseData));\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response && error.response.data && error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch(loginFail());\n\n      dispatch(setMessage(message));\n\n      return Promise.reject();\n    }\n  );\n};\n  \nexport const logoutUser = () => (dispatch: (action: any) => void) => {\n  UserService.logout();\n\n  dispatch(logout());\n};\n  ","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from \"./types\";\n\nexport const registerSuccess = () => ({\n    type: REGISTER_SUCCESS,\n});\n\nexport const registerFail = () => ({\n    type: REGISTER_FAIL,\n});\n\nexport const loginSuccess = (userData) => ({\n    type: LOGIN_SUCCESS,\n    payload: { user: userData }\n});\n\nexport const loginFail = () => ({\n    type: LOGIN_FAIL,\n});\n\nexport const logout = () => ({\n    type: LOGOUT,\n});\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from 'react-validation/build/form';\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { loginUser } from \"../actions/user\";\n\nconst required = (value:string) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        (required)\n      </div>\n    );\n  }\n};\n\nconst SignIn = (props: any) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const isLoggedIn = useSelector<any, boolean>(state => state.authentication.isLoggedIn);\n  const message = useSelector<any, any>(state => state.message.message);\n\n  const dispatch = useDispatch<(action:any)=>any>();\n\n  const onChangeUsername = (e: { target: { value: string; }; }) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e: { target: { value: string; }; }) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const signIn = (e: { preventDefault: () => void; }) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    (form.current as any).validateAll();\n\n    if ((checkBtn as any).current.context._errors.length === 0) {\n      dispatch(loginUser(username, password))\n        .then(() => {\n          props.history.push(\"/\");\n          window.location.reload();\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/spaces\" />;\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <Form onSubmit={signIn} ref={form}>\n            <div className=\"form-group\">\n                <label htmlFor=\"username\">USER NAME</label>\n                <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={username}\n                    onChange={onChangeUsername}\n                    validations={[required]}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"password\">PASSWORD</label>\n                <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onChangePassword}\n                    validations={[required]}\n                />\n            </div>\n\n            <div className=\"text-center\">\n              <button className=\"btn btn-light btn-block\" disabled={loading}>\n                {loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>SIGN IN</span>\n              </button>\n            </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { registerUser } from \"../actions/user\";\n\nconst required = (value:string) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        (required)\n      </div>\n    );\n  }\n};\n\nconst verifyUsername = (value:string) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        (must be between 3 and 20 characters)\n      </div>\n    );\n  }\n};\n\nconst verifyPassword = (value:string) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        (must be between 6 and 40 characters)\n      </div>\n    );\n  }\n};\n\nconst SignUp = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n\n  const message = useSelector<any, string>(state => state.message.message);\n  const dispatch = useDispatch<(action:any)=>any>();\n\n  const onChangeUsername = (e: { target: { value: string; }; }) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e: { target: { value: string; }; }) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const signUp = (e: { preventDefault: () => void; }) => {\n    e.preventDefault();\n\n    setSuccessful(false);\n\n    (form as any).current.validateAll();\n\n    if ((checkBtn as any).current.context._errors.length === 0) {\n      dispatch(registerUser(username, password))\n        .then(() => {\n          setSuccessful(true);\n        })\n        .catch(() => {\n          setSuccessful(false);\n        });\n    }\n  };\n\n  if (successful) {\n    return <Redirect to=\"/spaces/login\" />;\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <Form onSubmit={signUp} ref={form}>\n          {!successful && (\n            <div>\n                <div>\n                    <label htmlFor=\"username\">USER NAME</label>\n                    <Input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"username\"\n                        value={username}\n                        onChange={onChangeUsername}\n                        validations={[required, verifyUsername]}\n                    />\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">PASSWORD</label>\n                    <Input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        value={password}\n                        onChange={onChangePassword}\n                        validations={[required, verifyPassword]}\n                    />\n                </div>\n\n                <div className=\"text-center\">\n                    <button className=\"btn btn-light btn-block\">SIGN UP</button>\n                </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;","import React, { useState, useEffect } from \"react\";\nimport BlogService from \"../services/BlogService\";\nimport { default as BlogEntity } from '../entities/Blog';\nimport {\n    getBlog,\n} from '../actions/blog';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Blog: React.FC = (props) => { \n    const location = useLocation();\n    const blog = useSelector<any, BlogEntity>(state => state.blog);\n    const dispatch = useDispatch<(action:any)=>any>();\n    \n    useEffect(() => {\n        dispatch(getBlog(location.pathname));\n    }, []);\n\n    return (\n        <div className=\"list row\" style={\n            blog.theme\n            ? { \n                backgroundColor: blog.theme?.blogBackgroundColor,\n                color: blog.theme.blogColor,\n            }\n            : {}}>\n            <div className=\"col-md-12\">\n                <h1>{blog.title}</h1>\n\n                {blog.posts && (\n                    <ul className=\"list-group\">\n                        {blog.posts.map((post, index) => (\n                            <li className=\"list-group-item\" key={index}>\n                                <Link to={post.link!} className=\"nav-link\">\n                                    {post.title}\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n\n                {(!blog.posts || blog.posts.length == 0) && (\n                    <span>Nothing here right now.</span>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Blog","import http from \"./HttpService\";\nimport Post from \"../entities/Post\";\nimport Theme from \"../entities/Theme\";\n\nconst getPost: (postPath: string) => Promise<{ optionalPost: Post, optionalTheme: Theme }>\n= async (postPath: string) => {\n    const httpResponse: any = await http.get(postPath);\n    return httpResponse.data;\n};\n\nconst PostService = {\n  getPost,\n};\n\nexport default PostService","import React, { useState, useEffect } from \"react\";\nimport PostService from \"../services/PostService\";\nimport { default as PostEntity } from '../entities/Post';\nimport { default as ThemeEntity } from '../entities/Theme';\nimport {\n    getPost,\n} from '../actions/post';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Post: React.FC = (props) => { \n    const location = useLocation();\n    const post = useSelector<any, PostEntity>(state => state.post);\n    const blogTheme = useSelector<any, ThemeEntity>(state => state.blog.theme);\n    const dispatch = useDispatch<(action:any)=>any>();\n    \n    useEffect(() => {\n        dispatch(getPost(location.pathname));\n    }, []);\n\n    return (\n        <div className=\"list row\" style={\n            blogTheme\n            ? { \n                backgroundColor: blogTheme.postBackgroundColor,\n                color: blogTheme.postColor,\n            }\n            : {}}>\n            <div className=\"col-md-12\">\n                <h1>{post.title}</h1>\n\n                <div>\n                    {post.description}\n                </div>\n\n                {post.comments && (\n                    <ul className=\"list-group\">\n                        {post.comments.map((comment, index) => (\n                            <li className=\"list-group-item\" key={index}>\n                                <div>\n                                    <span className=\"commentUserName\">{comment.userName}: </span>\n                                    {comment.text}\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Post","import PostService from \"../services/PostService\";\nimport { GET_POST } from \"./types\";\n\nexport const getPost = (postPath: string) => async (dispatch) => {\n    try {\n        const getPostResponse = await PostService.getPost(postPath);\n\n        dispatch({\n            type: GET_POST,\n            getPostResponse\n        });\n    } catch (error) {\n        console.log(error);\n    }\n};","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Blogs from \"./components/Blogs\";\nimport SignIn from \"./components/SignIn\";\nimport SignUp from \"./components/SignUp\";\nimport { logoutUser } from \"./actions/user\";\nimport { clearMessage } from \"./actions/message\";\nimport { createBrowserHistory } from \"history\";\nimport Blog from \"./components/Blog\";\nimport Post from \"./components/Post\";\n\nconst history = createBrowserHistory();\n\nconst App: React.FC = () => {\n  const currentUser = useSelector<any, any>(state => state.authentication.user);\n  const dispatch = useDispatch<(action:any)=>any>();\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()); // clear message when changing location\n    });\n  }, [dispatch]);\n\n  const logOut = () => {\n    dispatch(logoutUser());\n  };\n\n  return (\n      <Router history={history}>\n        <div>\n        <nav className=\"navbar navbar-expand\">\n            <Link to={\"/spaces\"} className=\"navbar-brand ms-1\">\n              Blog Spaces\n            </Link>\n\n            {currentUser ? (\n              <div className=\"navbar-nav ms-auto\">\n                <li className=\"nav-item\">\n                  <a href=\"/spaces/login\" className=\"nav-link\" onClick={logOut}>\n                    LogOut\n                  </a>\n                </li>\n              </div>\n            ) : (\n              <div className=\"navbar-nav ms-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/spaces/login\"} className=\"nav-link\">\n                    Login\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/spaces/register\"} className=\"nav-link\">\n                    Sign Up\n                  </Link>\n                </li>\n              </div>\n            )}\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Redirect to=\"/spaces\" />\n              </Route>\n              <Route exact path={[\"/spaces/\"]} component={Blogs} />\n              <Route exact path=\"/spaces/login\" component={SignIn} />\n              <Route exact path=\"/spaces/register\" component={SignUp} />\n              <Route exact path=\"/spaces/:userName/:blogId\" component={Blog} />\n              <Route exact path=\"/spaces/:userName/:blogId/:postId\" component={Post} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from \"../actions/types\";\n  \nconst userString = localStorage.getItem(\"user\");\nconst user = userString ? JSON.parse(userString) : null;\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nconst authentication = function (state = initialState, action: { type:string, payload?:any }) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authentication\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = { message: \"\" };\n\nconst message = function (state = initialState, action: { type:string, payload:Object }) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n};\n\nexport default message\n","import {\n    GET_ALL_BLOGS,\n  } from \"../actions/types\";\nimport Blogs from \"../entities/Blogs\";\n  \n  const initialState: Blogs = { userBlogs: [], otherBlogs: []};\n  \n  const blogs = function(state = initialState, action: any) {\n    const { type, allBlogs } = action;\n  \n    switch (type) {\n      case GET_ALL_BLOGS:\n        return allBlogs;\n        \n      default:\n        return state;\n    }\n  };\n  \n  export default blogs","import {\n    GET_BLOG, GET_POST,\n  } from \"../actions/types\";\nimport Blog from \"../entities/Blog\";\n  \n  const initialState: Blog = { id: \"\", title: \"\", theme: null, posts: [] };\n  \n  const blog = function(state = initialState, action: any) {\n    const { type } = action;\n  \n    switch (type) {\n      case GET_BLOG:\n        return action.blog;\n\n      case GET_POST:\n        return {\n          ...state,\n          theme: action.getPostResponse.optionalTheme\n        };\n        \n      default:\n        return state;\n    }\n  };\n  \n  export default blog","import {\n    GET_POST,\n  } from \"../actions/types\";\nimport Post from \"../entities/Post\";\n  \n  const initialState: Post = { id: \"\", title: \"\", description: \"\", comments: [] };\n  \n  const post = function(state = initialState, action: any) {\n    const { type } = action;\n  \n    switch (type) {\n      case GET_POST:\n        return action.getPostResponse.optionalPost;\n        \n      default:\n        return state;\n    }\n  };\n  \n  export default post","import { combineReducers } from \"redux\";\nimport authentication from \"./authentication\";\nimport message from \"./message\";\nimport blogs from \"./blogs\";\nimport blog from \"./blog\";\nimport post from \"./post\";\n\nexport default combineReducers({\n  authentication,\n  message,\n  blogs,\n  blog,\n  post,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport combinedReducers from \"../reducers/combinedReducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    combinedReducers,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './data/store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}